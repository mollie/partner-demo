#!/bin/bash

set -a

test -f .env || cp .env.sample .env
source .env

function _compose() {
  docker-compose -f docker-compose-prod.yml "$@"
}

function _compose_dev() {
  _compose -f docker-compose-dev.yml "$@"
}

function help() { ### Show the list of possible functions - ./console [help]
  grep -E '^function.*?###' $0 | sed "s/^function //g" | sed "s/()/:/g" | awk 'BEGIN {FS = ":(.*?)### "}; {printf "\033[36m%-7s\033[0m %s\n", $1, $2}' | awk 'BEGIN {FS = " - "}; {printf "%-88s \033[90m%s\n", $1, $2}'
}

function up() { ### Build and start development environment - ./console up
  _compose_dev up --build
}

function upd() { ### Build and start development environment detached - ./console upd
  _compose_dev up --build --detach
}

function down() { ### Stop development environment - ./console down
  _compose_dev down
}

function tests() { ### Run all tests (coding standards, static analysis, unit, integration) - ./console tests
  _compose_dev exec php-fpm composer run tests
}

function logs() { ### Show container logs - ./console logs [php-fpm|mysql]
  _compose_dev logs ${1:-}
}

function artisan() { ### Execute artisan command on php-fpm container - ./console artisan command [command [command [...]]]
  _compose_dev exec php-fpm php artisan "$@"
}

function composer() { ### Execute composer command on php-fpm container - ./console composer command [command [command [...]]]
  _compose_dev exec php-fpm composer "$@"
}

function exec() { ### Execute bash command on container - ./console exec php-fpm|mysql command [command [command [...]]]
  _compose_dev exec ${1} "${@:2}"
}

function bash() { ### Access a given container - ./console bash php-fpm|mysql (php-fpm default)
  _compose_dev exec ${1:-php-fpm} bash
}

if [ "${1:- }" = " " ]; then
  help
else
  "$@"
fi
